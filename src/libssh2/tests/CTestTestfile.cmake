# CMake generated Testfile for 
# Source directory: D:/git/github/windows/tools/scanner/src/lib/libssh2/tests
# Build directory: D:/git/github/windows/tools/scanner/src/libssh2/tests
# 
# This file includes the relevant testing commands required for 
# testing this directory and lists subdirectories to be tested as well.
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(mansyntax "C:/msys64/usr/bin/sh.exe" "-c" "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/mansyntax.sh")
  set_tests_properties(mansyntax PROPERTIES  _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;70;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(mansyntax "C:/msys64/usr/bin/sh.exe" "-c" "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/mansyntax.sh")
  set_tests_properties(mansyntax PROPERTIES  _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;70;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(mansyntax "C:/msys64/usr/bin/sh.exe" "-c" "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/mansyntax.sh")
  set_tests_properties(mansyntax PROPERTIES  _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;70;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(mansyntax "C:/msys64/usr/bin/sh.exe" "-c" "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/mansyntax.sh")
  set_tests_properties(mansyntax PROPERTIES  _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;70;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
else()
  add_test(mansyntax NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_aa_warmup "D:/git/github/windows/tools/scanner/src/libssh2/tests/Debug/test_aa_warmup.exe")
  set_tests_properties(test_aa_warmup PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_aa_warmup "D:/git/github/windows/tools/scanner/src/libssh2/tests/Release/test_aa_warmup.exe")
  set_tests_properties(test_aa_warmup PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_aa_warmup "D:/git/github/windows/tools/scanner/src/libssh2/tests/MinSizeRel/test_aa_warmup.exe")
  set_tests_properties(test_aa_warmup PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_aa_warmup "D:/git/github/windows/tools/scanner/src/libssh2/tests/RelWithDebInfo/test_aa_warmup.exe")
  set_tests_properties(test_aa_warmup PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
else()
  add_test(test_aa_warmup NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_agent_forward_ok "D:/git/github/windows/tools/scanner/src/libssh2/tests/Debug/test_agent_forward_ok.exe")
  set_tests_properties(test_agent_forward_ok PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_agent_forward_ok "D:/git/github/windows/tools/scanner/src/libssh2/tests/Release/test_agent_forward_ok.exe")
  set_tests_properties(test_agent_forward_ok PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_agent_forward_ok "D:/git/github/windows/tools/scanner/src/libssh2/tests/MinSizeRel/test_agent_forward_ok.exe")
  set_tests_properties(test_agent_forward_ok PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_agent_forward_ok "D:/git/github/windows/tools/scanner/src/libssh2/tests/RelWithDebInfo/test_agent_forward_ok.exe")
  set_tests_properties(test_agent_forward_ok PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
else()
  add_test(test_agent_forward_ok NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_auth_keyboard_fail "D:/git/github/windows/tools/scanner/src/libssh2/tests/Debug/test_auth_keyboard_fail.exe")
  set_tests_properties(test_auth_keyboard_fail PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_auth_keyboard_fail "D:/git/github/windows/tools/scanner/src/libssh2/tests/Release/test_auth_keyboard_fail.exe")
  set_tests_properties(test_auth_keyboard_fail PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_auth_keyboard_fail "D:/git/github/windows/tools/scanner/src/libssh2/tests/MinSizeRel/test_auth_keyboard_fail.exe")
  set_tests_properties(test_auth_keyboard_fail PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_auth_keyboard_fail "D:/git/github/windows/tools/scanner/src/libssh2/tests/RelWithDebInfo/test_auth_keyboard_fail.exe")
  set_tests_properties(test_auth_keyboard_fail PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
else()
  add_test(test_auth_keyboard_fail NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_auth_keyboard_ok "D:/git/github/windows/tools/scanner/src/libssh2/tests/Debug/test_auth_keyboard_ok.exe")
  set_tests_properties(test_auth_keyboard_ok PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_auth_keyboard_ok "D:/git/github/windows/tools/scanner/src/libssh2/tests/Release/test_auth_keyboard_ok.exe")
  set_tests_properties(test_auth_keyboard_ok PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_auth_keyboard_ok "D:/git/github/windows/tools/scanner/src/libssh2/tests/MinSizeRel/test_auth_keyboard_ok.exe")
  set_tests_properties(test_auth_keyboard_ok PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_auth_keyboard_ok "D:/git/github/windows/tools/scanner/src/libssh2/tests/RelWithDebInfo/test_auth_keyboard_ok.exe")
  set_tests_properties(test_auth_keyboard_ok PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
else()
  add_test(test_auth_keyboard_ok NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_auth_password_fail_password "D:/git/github/windows/tools/scanner/src/libssh2/tests/Debug/test_auth_password_fail_password.exe")
  set_tests_properties(test_auth_password_fail_password PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_auth_password_fail_password "D:/git/github/windows/tools/scanner/src/libssh2/tests/Release/test_auth_password_fail_password.exe")
  set_tests_properties(test_auth_password_fail_password PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_auth_password_fail_password "D:/git/github/windows/tools/scanner/src/libssh2/tests/MinSizeRel/test_auth_password_fail_password.exe")
  set_tests_properties(test_auth_password_fail_password PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_auth_password_fail_password "D:/git/github/windows/tools/scanner/src/libssh2/tests/RelWithDebInfo/test_auth_password_fail_password.exe")
  set_tests_properties(test_auth_password_fail_password PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
else()
  add_test(test_auth_password_fail_password NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_auth_password_fail_username "D:/git/github/windows/tools/scanner/src/libssh2/tests/Debug/test_auth_password_fail_username.exe")
  set_tests_properties(test_auth_password_fail_username PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_auth_password_fail_username "D:/git/github/windows/tools/scanner/src/libssh2/tests/Release/test_auth_password_fail_username.exe")
  set_tests_properties(test_auth_password_fail_username PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_auth_password_fail_username "D:/git/github/windows/tools/scanner/src/libssh2/tests/MinSizeRel/test_auth_password_fail_username.exe")
  set_tests_properties(test_auth_password_fail_username PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_auth_password_fail_username "D:/git/github/windows/tools/scanner/src/libssh2/tests/RelWithDebInfo/test_auth_password_fail_username.exe")
  set_tests_properties(test_auth_password_fail_username PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
else()
  add_test(test_auth_password_fail_username NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_auth_password_ok "D:/git/github/windows/tools/scanner/src/libssh2/tests/Debug/test_auth_password_ok.exe")
  set_tests_properties(test_auth_password_ok PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_auth_password_ok "D:/git/github/windows/tools/scanner/src/libssh2/tests/Release/test_auth_password_ok.exe")
  set_tests_properties(test_auth_password_ok PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_auth_password_ok "D:/git/github/windows/tools/scanner/src/libssh2/tests/MinSizeRel/test_auth_password_ok.exe")
  set_tests_properties(test_auth_password_ok PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_auth_password_ok "D:/git/github/windows/tools/scanner/src/libssh2/tests/RelWithDebInfo/test_auth_password_ok.exe")
  set_tests_properties(test_auth_password_ok PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
else()
  add_test(test_auth_password_ok NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_auth_pubkey_fail "D:/git/github/windows/tools/scanner/src/libssh2/tests/Debug/test_auth_pubkey_fail.exe")
  set_tests_properties(test_auth_pubkey_fail PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_auth_pubkey_fail "D:/git/github/windows/tools/scanner/src/libssh2/tests/Release/test_auth_pubkey_fail.exe")
  set_tests_properties(test_auth_pubkey_fail PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_auth_pubkey_fail "D:/git/github/windows/tools/scanner/src/libssh2/tests/MinSizeRel/test_auth_pubkey_fail.exe")
  set_tests_properties(test_auth_pubkey_fail PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_auth_pubkey_fail "D:/git/github/windows/tools/scanner/src/libssh2/tests/RelWithDebInfo/test_auth_pubkey_fail.exe")
  set_tests_properties(test_auth_pubkey_fail PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
else()
  add_test(test_auth_pubkey_fail NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_auth_pubkey_ok_dsa "D:/git/github/windows/tools/scanner/src/libssh2/tests/Debug/test_auth_pubkey_ok_dsa.exe")
  set_tests_properties(test_auth_pubkey_ok_dsa PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_auth_pubkey_ok_dsa "D:/git/github/windows/tools/scanner/src/libssh2/tests/Release/test_auth_pubkey_ok_dsa.exe")
  set_tests_properties(test_auth_pubkey_ok_dsa PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_auth_pubkey_ok_dsa "D:/git/github/windows/tools/scanner/src/libssh2/tests/MinSizeRel/test_auth_pubkey_ok_dsa.exe")
  set_tests_properties(test_auth_pubkey_ok_dsa PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_auth_pubkey_ok_dsa "D:/git/github/windows/tools/scanner/src/libssh2/tests/RelWithDebInfo/test_auth_pubkey_ok_dsa.exe")
  set_tests_properties(test_auth_pubkey_ok_dsa PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
else()
  add_test(test_auth_pubkey_ok_dsa NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_auth_pubkey_ok_ecdsa "D:/git/github/windows/tools/scanner/src/libssh2/tests/Debug/test_auth_pubkey_ok_ecdsa.exe")
  set_tests_properties(test_auth_pubkey_ok_ecdsa PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_auth_pubkey_ok_ecdsa "D:/git/github/windows/tools/scanner/src/libssh2/tests/Release/test_auth_pubkey_ok_ecdsa.exe")
  set_tests_properties(test_auth_pubkey_ok_ecdsa PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_auth_pubkey_ok_ecdsa "D:/git/github/windows/tools/scanner/src/libssh2/tests/MinSizeRel/test_auth_pubkey_ok_ecdsa.exe")
  set_tests_properties(test_auth_pubkey_ok_ecdsa PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_auth_pubkey_ok_ecdsa "D:/git/github/windows/tools/scanner/src/libssh2/tests/RelWithDebInfo/test_auth_pubkey_ok_ecdsa.exe")
  set_tests_properties(test_auth_pubkey_ok_ecdsa PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
else()
  add_test(test_auth_pubkey_ok_ecdsa NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_auth_pubkey_ok_ecdsa_signed "D:/git/github/windows/tools/scanner/src/libssh2/tests/Debug/test_auth_pubkey_ok_ecdsa_signed.exe")
  set_tests_properties(test_auth_pubkey_ok_ecdsa_signed PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_auth_pubkey_ok_ecdsa_signed "D:/git/github/windows/tools/scanner/src/libssh2/tests/Release/test_auth_pubkey_ok_ecdsa_signed.exe")
  set_tests_properties(test_auth_pubkey_ok_ecdsa_signed PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_auth_pubkey_ok_ecdsa_signed "D:/git/github/windows/tools/scanner/src/libssh2/tests/MinSizeRel/test_auth_pubkey_ok_ecdsa_signed.exe")
  set_tests_properties(test_auth_pubkey_ok_ecdsa_signed PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_auth_pubkey_ok_ecdsa_signed "D:/git/github/windows/tools/scanner/src/libssh2/tests/RelWithDebInfo/test_auth_pubkey_ok_ecdsa_signed.exe")
  set_tests_properties(test_auth_pubkey_ok_ecdsa_signed PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
else()
  add_test(test_auth_pubkey_ok_ecdsa_signed NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_auth_pubkey_ok_ed25519 "D:/git/github/windows/tools/scanner/src/libssh2/tests/Debug/test_auth_pubkey_ok_ed25519.exe")
  set_tests_properties(test_auth_pubkey_ok_ed25519 PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_auth_pubkey_ok_ed25519 "D:/git/github/windows/tools/scanner/src/libssh2/tests/Release/test_auth_pubkey_ok_ed25519.exe")
  set_tests_properties(test_auth_pubkey_ok_ed25519 PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_auth_pubkey_ok_ed25519 "D:/git/github/windows/tools/scanner/src/libssh2/tests/MinSizeRel/test_auth_pubkey_ok_ed25519.exe")
  set_tests_properties(test_auth_pubkey_ok_ed25519 PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_auth_pubkey_ok_ed25519 "D:/git/github/windows/tools/scanner/src/libssh2/tests/RelWithDebInfo/test_auth_pubkey_ok_ed25519.exe")
  set_tests_properties(test_auth_pubkey_ok_ed25519 PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
else()
  add_test(test_auth_pubkey_ok_ed25519 NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_auth_pubkey_ok_ed25519_encrypted "D:/git/github/windows/tools/scanner/src/libssh2/tests/Debug/test_auth_pubkey_ok_ed25519_encrypted.exe")
  set_tests_properties(test_auth_pubkey_ok_ed25519_encrypted PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_auth_pubkey_ok_ed25519_encrypted "D:/git/github/windows/tools/scanner/src/libssh2/tests/Release/test_auth_pubkey_ok_ed25519_encrypted.exe")
  set_tests_properties(test_auth_pubkey_ok_ed25519_encrypted PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_auth_pubkey_ok_ed25519_encrypted "D:/git/github/windows/tools/scanner/src/libssh2/tests/MinSizeRel/test_auth_pubkey_ok_ed25519_encrypted.exe")
  set_tests_properties(test_auth_pubkey_ok_ed25519_encrypted PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_auth_pubkey_ok_ed25519_encrypted "D:/git/github/windows/tools/scanner/src/libssh2/tests/RelWithDebInfo/test_auth_pubkey_ok_ed25519_encrypted.exe")
  set_tests_properties(test_auth_pubkey_ok_ed25519_encrypted PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
else()
  add_test(test_auth_pubkey_ok_ed25519_encrypted NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_auth_pubkey_ok_ed25519_mem "D:/git/github/windows/tools/scanner/src/libssh2/tests/Debug/test_auth_pubkey_ok_ed25519_mem.exe")
  set_tests_properties(test_auth_pubkey_ok_ed25519_mem PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_auth_pubkey_ok_ed25519_mem "D:/git/github/windows/tools/scanner/src/libssh2/tests/Release/test_auth_pubkey_ok_ed25519_mem.exe")
  set_tests_properties(test_auth_pubkey_ok_ed25519_mem PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_auth_pubkey_ok_ed25519_mem "D:/git/github/windows/tools/scanner/src/libssh2/tests/MinSizeRel/test_auth_pubkey_ok_ed25519_mem.exe")
  set_tests_properties(test_auth_pubkey_ok_ed25519_mem PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_auth_pubkey_ok_ed25519_mem "D:/git/github/windows/tools/scanner/src/libssh2/tests/RelWithDebInfo/test_auth_pubkey_ok_ed25519_mem.exe")
  set_tests_properties(test_auth_pubkey_ok_ed25519_mem PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
else()
  add_test(test_auth_pubkey_ok_ed25519_mem NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_auth_pubkey_ok_rsa "D:/git/github/windows/tools/scanner/src/libssh2/tests/Debug/test_auth_pubkey_ok_rsa.exe")
  set_tests_properties(test_auth_pubkey_ok_rsa PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_auth_pubkey_ok_rsa "D:/git/github/windows/tools/scanner/src/libssh2/tests/Release/test_auth_pubkey_ok_rsa.exe")
  set_tests_properties(test_auth_pubkey_ok_rsa PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_auth_pubkey_ok_rsa "D:/git/github/windows/tools/scanner/src/libssh2/tests/MinSizeRel/test_auth_pubkey_ok_rsa.exe")
  set_tests_properties(test_auth_pubkey_ok_rsa PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_auth_pubkey_ok_rsa "D:/git/github/windows/tools/scanner/src/libssh2/tests/RelWithDebInfo/test_auth_pubkey_ok_rsa.exe")
  set_tests_properties(test_auth_pubkey_ok_rsa PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
else()
  add_test(test_auth_pubkey_ok_rsa NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_auth_pubkey_ok_rsa_aes256gcm "D:/git/github/windows/tools/scanner/src/libssh2/tests/Debug/test_auth_pubkey_ok_rsa_aes256gcm.exe")
  set_tests_properties(test_auth_pubkey_ok_rsa_aes256gcm PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_auth_pubkey_ok_rsa_aes256gcm "D:/git/github/windows/tools/scanner/src/libssh2/tests/Release/test_auth_pubkey_ok_rsa_aes256gcm.exe")
  set_tests_properties(test_auth_pubkey_ok_rsa_aes256gcm PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_auth_pubkey_ok_rsa_aes256gcm "D:/git/github/windows/tools/scanner/src/libssh2/tests/MinSizeRel/test_auth_pubkey_ok_rsa_aes256gcm.exe")
  set_tests_properties(test_auth_pubkey_ok_rsa_aes256gcm PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_auth_pubkey_ok_rsa_aes256gcm "D:/git/github/windows/tools/scanner/src/libssh2/tests/RelWithDebInfo/test_auth_pubkey_ok_rsa_aes256gcm.exe")
  set_tests_properties(test_auth_pubkey_ok_rsa_aes256gcm PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
else()
  add_test(test_auth_pubkey_ok_rsa_aes256gcm NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_auth_pubkey_ok_rsa_encrypted "D:/git/github/windows/tools/scanner/src/libssh2/tests/Debug/test_auth_pubkey_ok_rsa_encrypted.exe")
  set_tests_properties(test_auth_pubkey_ok_rsa_encrypted PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_auth_pubkey_ok_rsa_encrypted "D:/git/github/windows/tools/scanner/src/libssh2/tests/Release/test_auth_pubkey_ok_rsa_encrypted.exe")
  set_tests_properties(test_auth_pubkey_ok_rsa_encrypted PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_auth_pubkey_ok_rsa_encrypted "D:/git/github/windows/tools/scanner/src/libssh2/tests/MinSizeRel/test_auth_pubkey_ok_rsa_encrypted.exe")
  set_tests_properties(test_auth_pubkey_ok_rsa_encrypted PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_auth_pubkey_ok_rsa_encrypted "D:/git/github/windows/tools/scanner/src/libssh2/tests/RelWithDebInfo/test_auth_pubkey_ok_rsa_encrypted.exe")
  set_tests_properties(test_auth_pubkey_ok_rsa_encrypted PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
else()
  add_test(test_auth_pubkey_ok_rsa_encrypted NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_auth_pubkey_ok_rsa_openssh "D:/git/github/windows/tools/scanner/src/libssh2/tests/Debug/test_auth_pubkey_ok_rsa_openssh.exe")
  set_tests_properties(test_auth_pubkey_ok_rsa_openssh PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_auth_pubkey_ok_rsa_openssh "D:/git/github/windows/tools/scanner/src/libssh2/tests/Release/test_auth_pubkey_ok_rsa_openssh.exe")
  set_tests_properties(test_auth_pubkey_ok_rsa_openssh PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_auth_pubkey_ok_rsa_openssh "D:/git/github/windows/tools/scanner/src/libssh2/tests/MinSizeRel/test_auth_pubkey_ok_rsa_openssh.exe")
  set_tests_properties(test_auth_pubkey_ok_rsa_openssh PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_auth_pubkey_ok_rsa_openssh "D:/git/github/windows/tools/scanner/src/libssh2/tests/RelWithDebInfo/test_auth_pubkey_ok_rsa_openssh.exe")
  set_tests_properties(test_auth_pubkey_ok_rsa_openssh PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
else()
  add_test(test_auth_pubkey_ok_rsa_openssh NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_auth_pubkey_ok_rsa_signed "D:/git/github/windows/tools/scanner/src/libssh2/tests/Debug/test_auth_pubkey_ok_rsa_signed.exe")
  set_tests_properties(test_auth_pubkey_ok_rsa_signed PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_auth_pubkey_ok_rsa_signed "D:/git/github/windows/tools/scanner/src/libssh2/tests/Release/test_auth_pubkey_ok_rsa_signed.exe")
  set_tests_properties(test_auth_pubkey_ok_rsa_signed PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_auth_pubkey_ok_rsa_signed "D:/git/github/windows/tools/scanner/src/libssh2/tests/MinSizeRel/test_auth_pubkey_ok_rsa_signed.exe")
  set_tests_properties(test_auth_pubkey_ok_rsa_signed PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_auth_pubkey_ok_rsa_signed "D:/git/github/windows/tools/scanner/src/libssh2/tests/RelWithDebInfo/test_auth_pubkey_ok_rsa_signed.exe")
  set_tests_properties(test_auth_pubkey_ok_rsa_signed PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
else()
  add_test(test_auth_pubkey_ok_rsa_signed NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_hostkey_hash "D:/git/github/windows/tools/scanner/src/libssh2/tests/Debug/test_hostkey_hash.exe")
  set_tests_properties(test_hostkey_hash PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_hostkey_hash "D:/git/github/windows/tools/scanner/src/libssh2/tests/Release/test_hostkey_hash.exe")
  set_tests_properties(test_hostkey_hash PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_hostkey_hash "D:/git/github/windows/tools/scanner/src/libssh2/tests/MinSizeRel/test_hostkey_hash.exe")
  set_tests_properties(test_hostkey_hash PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_hostkey_hash "D:/git/github/windows/tools/scanner/src/libssh2/tests/RelWithDebInfo/test_hostkey_hash.exe")
  set_tests_properties(test_hostkey_hash PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
else()
  add_test(test_hostkey_hash NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_read "D:/git/github/windows/tools/scanner/src/libssh2/tests/Debug/test_read.exe")
  set_tests_properties(test_read PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_read "D:/git/github/windows/tools/scanner/src/libssh2/tests/Release/test_read.exe")
  set_tests_properties(test_read PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_read "D:/git/github/windows/tools/scanner/src/libssh2/tests/MinSizeRel/test_read.exe")
  set_tests_properties(test_read PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_read "D:/git/github/windows/tools/scanner/src/libssh2/tests/RelWithDebInfo/test_read.exe")
  set_tests_properties(test_read PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
else()
  add_test(test_read NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_auth_keyboard_info_request "D:/git/github/windows/tools/scanner/src/libssh2/tests/Debug/test_auth_keyboard_info_request.exe")
  set_tests_properties(test_auth_keyboard_info_request PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_auth_keyboard_info_request "D:/git/github/windows/tools/scanner/src/libssh2/tests/Release/test_auth_keyboard_info_request.exe")
  set_tests_properties(test_auth_keyboard_info_request PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_auth_keyboard_info_request "D:/git/github/windows/tools/scanner/src/libssh2/tests/MinSizeRel/test_auth_keyboard_info_request.exe")
  set_tests_properties(test_auth_keyboard_info_request PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_auth_keyboard_info_request "D:/git/github/windows/tools/scanner/src/libssh2/tests/RelWithDebInfo/test_auth_keyboard_info_request.exe")
  set_tests_properties(test_auth_keyboard_info_request PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
else()
  add_test(test_auth_keyboard_info_request NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_hostkey "D:/git/github/windows/tools/scanner/src/libssh2/tests/Debug/test_hostkey.exe")
  set_tests_properties(test_hostkey PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_hostkey "D:/git/github/windows/tools/scanner/src/libssh2/tests/Release/test_hostkey.exe")
  set_tests_properties(test_hostkey PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_hostkey "D:/git/github/windows/tools/scanner/src/libssh2/tests/MinSizeRel/test_hostkey.exe")
  set_tests_properties(test_hostkey PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_hostkey "D:/git/github/windows/tools/scanner/src/libssh2/tests/RelWithDebInfo/test_hostkey.exe")
  set_tests_properties(test_hostkey PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;112;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
else()
  add_test(test_hostkey NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_simple "D:/git/github/windows/tools/scanner/src/libssh2/tests/Debug/test_simple.exe")
  set_tests_properties(test_simple PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;120;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_simple "D:/git/github/windows/tools/scanner/src/libssh2/tests/Release/test_simple.exe")
  set_tests_properties(test_simple PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;120;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_simple "D:/git/github/windows/tools/scanner/src/libssh2/tests/MinSizeRel/test_simple.exe")
  set_tests_properties(test_simple PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;120;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_simple "D:/git/github/windows/tools/scanner/src/libssh2/tests/RelWithDebInfo/test_simple.exe")
  set_tests_properties(test_simple PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;120;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
else()
  add_test(test_simple NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_read-3des-cbc "D:/git/github/windows/tools/scanner/src/libssh2/tests/Debug/test_read.exe")
  set_tests_properties(test_read-3des-cbc PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests;FIXTURE_TEST_CRYPT=3des-cbc" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;147;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_read-3des-cbc "D:/git/github/windows/tools/scanner/src/libssh2/tests/Release/test_read.exe")
  set_tests_properties(test_read-3des-cbc PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests;FIXTURE_TEST_CRYPT=3des-cbc" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;147;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_read-3des-cbc "D:/git/github/windows/tools/scanner/src/libssh2/tests/MinSizeRel/test_read.exe")
  set_tests_properties(test_read-3des-cbc PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests;FIXTURE_TEST_CRYPT=3des-cbc" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;147;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_read-3des-cbc "D:/git/github/windows/tools/scanner/src/libssh2/tests/RelWithDebInfo/test_read.exe")
  set_tests_properties(test_read-3des-cbc PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests;FIXTURE_TEST_CRYPT=3des-cbc" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;147;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
else()
  add_test(test_read-3des-cbc NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_read-aes128-cbc "D:/git/github/windows/tools/scanner/src/libssh2/tests/Debug/test_read.exe")
  set_tests_properties(test_read-aes128-cbc PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests;FIXTURE_TEST_CRYPT=aes128-cbc" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;147;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_read-aes128-cbc "D:/git/github/windows/tools/scanner/src/libssh2/tests/Release/test_read.exe")
  set_tests_properties(test_read-aes128-cbc PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests;FIXTURE_TEST_CRYPT=aes128-cbc" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;147;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_read-aes128-cbc "D:/git/github/windows/tools/scanner/src/libssh2/tests/MinSizeRel/test_read.exe")
  set_tests_properties(test_read-aes128-cbc PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests;FIXTURE_TEST_CRYPT=aes128-cbc" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;147;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_read-aes128-cbc "D:/git/github/windows/tools/scanner/src/libssh2/tests/RelWithDebInfo/test_read.exe")
  set_tests_properties(test_read-aes128-cbc PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests;FIXTURE_TEST_CRYPT=aes128-cbc" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;147;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
else()
  add_test(test_read-aes128-cbc NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_read-aes128-ctr "D:/git/github/windows/tools/scanner/src/libssh2/tests/Debug/test_read.exe")
  set_tests_properties(test_read-aes128-ctr PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests;FIXTURE_TEST_CRYPT=aes128-ctr" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;147;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_read-aes128-ctr "D:/git/github/windows/tools/scanner/src/libssh2/tests/Release/test_read.exe")
  set_tests_properties(test_read-aes128-ctr PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests;FIXTURE_TEST_CRYPT=aes128-ctr" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;147;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_read-aes128-ctr "D:/git/github/windows/tools/scanner/src/libssh2/tests/MinSizeRel/test_read.exe")
  set_tests_properties(test_read-aes128-ctr PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests;FIXTURE_TEST_CRYPT=aes128-ctr" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;147;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_read-aes128-ctr "D:/git/github/windows/tools/scanner/src/libssh2/tests/RelWithDebInfo/test_read.exe")
  set_tests_properties(test_read-aes128-ctr PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests;FIXTURE_TEST_CRYPT=aes128-ctr" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;147;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
else()
  add_test(test_read-aes128-ctr NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_read-aes128-gcm@openssh.com "D:/git/github/windows/tools/scanner/src/libssh2/tests/Debug/test_read.exe")
  set_tests_properties(test_read-aes128-gcm@openssh.com PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests;FIXTURE_TEST_CRYPT=aes128-gcm@openssh.com" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;147;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_read-aes128-gcm@openssh.com "D:/git/github/windows/tools/scanner/src/libssh2/tests/Release/test_read.exe")
  set_tests_properties(test_read-aes128-gcm@openssh.com PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests;FIXTURE_TEST_CRYPT=aes128-gcm@openssh.com" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;147;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_read-aes128-gcm@openssh.com "D:/git/github/windows/tools/scanner/src/libssh2/tests/MinSizeRel/test_read.exe")
  set_tests_properties(test_read-aes128-gcm@openssh.com PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests;FIXTURE_TEST_CRYPT=aes128-gcm@openssh.com" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;147;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_read-aes128-gcm@openssh.com "D:/git/github/windows/tools/scanner/src/libssh2/tests/RelWithDebInfo/test_read.exe")
  set_tests_properties(test_read-aes128-gcm@openssh.com PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests;FIXTURE_TEST_CRYPT=aes128-gcm@openssh.com" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;147;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
else()
  add_test(test_read-aes128-gcm@openssh.com NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_read-aes192-cbc "D:/git/github/windows/tools/scanner/src/libssh2/tests/Debug/test_read.exe")
  set_tests_properties(test_read-aes192-cbc PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests;FIXTURE_TEST_CRYPT=aes192-cbc" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;147;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_read-aes192-cbc "D:/git/github/windows/tools/scanner/src/libssh2/tests/Release/test_read.exe")
  set_tests_properties(test_read-aes192-cbc PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests;FIXTURE_TEST_CRYPT=aes192-cbc" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;147;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_read-aes192-cbc "D:/git/github/windows/tools/scanner/src/libssh2/tests/MinSizeRel/test_read.exe")
  set_tests_properties(test_read-aes192-cbc PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests;FIXTURE_TEST_CRYPT=aes192-cbc" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;147;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_read-aes192-cbc "D:/git/github/windows/tools/scanner/src/libssh2/tests/RelWithDebInfo/test_read.exe")
  set_tests_properties(test_read-aes192-cbc PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests;FIXTURE_TEST_CRYPT=aes192-cbc" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;147;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
else()
  add_test(test_read-aes192-cbc NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_read-aes192-ctr "D:/git/github/windows/tools/scanner/src/libssh2/tests/Debug/test_read.exe")
  set_tests_properties(test_read-aes192-ctr PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests;FIXTURE_TEST_CRYPT=aes192-ctr" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;147;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_read-aes192-ctr "D:/git/github/windows/tools/scanner/src/libssh2/tests/Release/test_read.exe")
  set_tests_properties(test_read-aes192-ctr PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests;FIXTURE_TEST_CRYPT=aes192-ctr" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;147;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_read-aes192-ctr "D:/git/github/windows/tools/scanner/src/libssh2/tests/MinSizeRel/test_read.exe")
  set_tests_properties(test_read-aes192-ctr PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests;FIXTURE_TEST_CRYPT=aes192-ctr" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;147;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_read-aes192-ctr "D:/git/github/windows/tools/scanner/src/libssh2/tests/RelWithDebInfo/test_read.exe")
  set_tests_properties(test_read-aes192-ctr PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests;FIXTURE_TEST_CRYPT=aes192-ctr" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;147;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
else()
  add_test(test_read-aes192-ctr NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_read-aes256-cbc "D:/git/github/windows/tools/scanner/src/libssh2/tests/Debug/test_read.exe")
  set_tests_properties(test_read-aes256-cbc PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests;FIXTURE_TEST_CRYPT=aes256-cbc" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;147;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_read-aes256-cbc "D:/git/github/windows/tools/scanner/src/libssh2/tests/Release/test_read.exe")
  set_tests_properties(test_read-aes256-cbc PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests;FIXTURE_TEST_CRYPT=aes256-cbc" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;147;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_read-aes256-cbc "D:/git/github/windows/tools/scanner/src/libssh2/tests/MinSizeRel/test_read.exe")
  set_tests_properties(test_read-aes256-cbc PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests;FIXTURE_TEST_CRYPT=aes256-cbc" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;147;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_read-aes256-cbc "D:/git/github/windows/tools/scanner/src/libssh2/tests/RelWithDebInfo/test_read.exe")
  set_tests_properties(test_read-aes256-cbc PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests;FIXTURE_TEST_CRYPT=aes256-cbc" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;147;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
else()
  add_test(test_read-aes256-cbc NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_read-aes256-ctr "D:/git/github/windows/tools/scanner/src/libssh2/tests/Debug/test_read.exe")
  set_tests_properties(test_read-aes256-ctr PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests;FIXTURE_TEST_CRYPT=aes256-ctr" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;147;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_read-aes256-ctr "D:/git/github/windows/tools/scanner/src/libssh2/tests/Release/test_read.exe")
  set_tests_properties(test_read-aes256-ctr PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests;FIXTURE_TEST_CRYPT=aes256-ctr" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;147;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_read-aes256-ctr "D:/git/github/windows/tools/scanner/src/libssh2/tests/MinSizeRel/test_read.exe")
  set_tests_properties(test_read-aes256-ctr PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests;FIXTURE_TEST_CRYPT=aes256-ctr" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;147;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_read-aes256-ctr "D:/git/github/windows/tools/scanner/src/libssh2/tests/RelWithDebInfo/test_read.exe")
  set_tests_properties(test_read-aes256-ctr PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests;FIXTURE_TEST_CRYPT=aes256-ctr" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;147;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
else()
  add_test(test_read-aes256-ctr NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_read-aes256-gcm@openssh.com "D:/git/github/windows/tools/scanner/src/libssh2/tests/Debug/test_read.exe")
  set_tests_properties(test_read-aes256-gcm@openssh.com PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests;FIXTURE_TEST_CRYPT=aes256-gcm@openssh.com" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;147;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_read-aes256-gcm@openssh.com "D:/git/github/windows/tools/scanner/src/libssh2/tests/Release/test_read.exe")
  set_tests_properties(test_read-aes256-gcm@openssh.com PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests;FIXTURE_TEST_CRYPT=aes256-gcm@openssh.com" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;147;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_read-aes256-gcm@openssh.com "D:/git/github/windows/tools/scanner/src/libssh2/tests/MinSizeRel/test_read.exe")
  set_tests_properties(test_read-aes256-gcm@openssh.com PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests;FIXTURE_TEST_CRYPT=aes256-gcm@openssh.com" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;147;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_read-aes256-gcm@openssh.com "D:/git/github/windows/tools/scanner/src/libssh2/tests/RelWithDebInfo/test_read.exe")
  set_tests_properties(test_read-aes256-gcm@openssh.com PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests;FIXTURE_TEST_CRYPT=aes256-gcm@openssh.com" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;147;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
else()
  add_test(test_read-aes256-gcm@openssh.com NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_read-hmac-md5 "D:/git/github/windows/tools/scanner/src/libssh2/tests/Debug/test_read.exe")
  set_tests_properties(test_read-hmac-md5 PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests;FIXTURE_TEST_MAC=hmac-md5" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;147;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_read-hmac-md5 "D:/git/github/windows/tools/scanner/src/libssh2/tests/Release/test_read.exe")
  set_tests_properties(test_read-hmac-md5 PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests;FIXTURE_TEST_MAC=hmac-md5" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;147;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_read-hmac-md5 "D:/git/github/windows/tools/scanner/src/libssh2/tests/MinSizeRel/test_read.exe")
  set_tests_properties(test_read-hmac-md5 PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests;FIXTURE_TEST_MAC=hmac-md5" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;147;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_read-hmac-md5 "D:/git/github/windows/tools/scanner/src/libssh2/tests/RelWithDebInfo/test_read.exe")
  set_tests_properties(test_read-hmac-md5 PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests;FIXTURE_TEST_MAC=hmac-md5" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;147;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
else()
  add_test(test_read-hmac-md5 NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_read-hmac-md5-96 "D:/git/github/windows/tools/scanner/src/libssh2/tests/Debug/test_read.exe")
  set_tests_properties(test_read-hmac-md5-96 PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests;FIXTURE_TEST_MAC=hmac-md5-96" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;147;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_read-hmac-md5-96 "D:/git/github/windows/tools/scanner/src/libssh2/tests/Release/test_read.exe")
  set_tests_properties(test_read-hmac-md5-96 PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests;FIXTURE_TEST_MAC=hmac-md5-96" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;147;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_read-hmac-md5-96 "D:/git/github/windows/tools/scanner/src/libssh2/tests/MinSizeRel/test_read.exe")
  set_tests_properties(test_read-hmac-md5-96 PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests;FIXTURE_TEST_MAC=hmac-md5-96" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;147;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_read-hmac-md5-96 "D:/git/github/windows/tools/scanner/src/libssh2/tests/RelWithDebInfo/test_read.exe")
  set_tests_properties(test_read-hmac-md5-96 PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests;FIXTURE_TEST_MAC=hmac-md5-96" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;147;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
else()
  add_test(test_read-hmac-md5-96 NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_read-hmac-sha1 "D:/git/github/windows/tools/scanner/src/libssh2/tests/Debug/test_read.exe")
  set_tests_properties(test_read-hmac-sha1 PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests;FIXTURE_TEST_MAC=hmac-sha1" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;147;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_read-hmac-sha1 "D:/git/github/windows/tools/scanner/src/libssh2/tests/Release/test_read.exe")
  set_tests_properties(test_read-hmac-sha1 PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests;FIXTURE_TEST_MAC=hmac-sha1" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;147;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_read-hmac-sha1 "D:/git/github/windows/tools/scanner/src/libssh2/tests/MinSizeRel/test_read.exe")
  set_tests_properties(test_read-hmac-sha1 PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests;FIXTURE_TEST_MAC=hmac-sha1" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;147;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_read-hmac-sha1 "D:/git/github/windows/tools/scanner/src/libssh2/tests/RelWithDebInfo/test_read.exe")
  set_tests_properties(test_read-hmac-sha1 PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests;FIXTURE_TEST_MAC=hmac-sha1" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;147;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
else()
  add_test(test_read-hmac-sha1 NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_read-hmac-sha1-96 "D:/git/github/windows/tools/scanner/src/libssh2/tests/Debug/test_read.exe")
  set_tests_properties(test_read-hmac-sha1-96 PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests;FIXTURE_TEST_MAC=hmac-sha1-96" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;147;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_read-hmac-sha1-96 "D:/git/github/windows/tools/scanner/src/libssh2/tests/Release/test_read.exe")
  set_tests_properties(test_read-hmac-sha1-96 PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests;FIXTURE_TEST_MAC=hmac-sha1-96" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;147;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_read-hmac-sha1-96 "D:/git/github/windows/tools/scanner/src/libssh2/tests/MinSizeRel/test_read.exe")
  set_tests_properties(test_read-hmac-sha1-96 PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests;FIXTURE_TEST_MAC=hmac-sha1-96" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;147;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_read-hmac-sha1-96 "D:/git/github/windows/tools/scanner/src/libssh2/tests/RelWithDebInfo/test_read.exe")
  set_tests_properties(test_read-hmac-sha1-96 PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests;FIXTURE_TEST_MAC=hmac-sha1-96" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;147;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
else()
  add_test(test_read-hmac-sha1-96 NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_read-hmac-sha1-etm@openssh.com "D:/git/github/windows/tools/scanner/src/libssh2/tests/Debug/test_read.exe")
  set_tests_properties(test_read-hmac-sha1-etm@openssh.com PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests;FIXTURE_TEST_MAC=hmac-sha1-etm@openssh.com" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;147;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_read-hmac-sha1-etm@openssh.com "D:/git/github/windows/tools/scanner/src/libssh2/tests/Release/test_read.exe")
  set_tests_properties(test_read-hmac-sha1-etm@openssh.com PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests;FIXTURE_TEST_MAC=hmac-sha1-etm@openssh.com" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;147;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_read-hmac-sha1-etm@openssh.com "D:/git/github/windows/tools/scanner/src/libssh2/tests/MinSizeRel/test_read.exe")
  set_tests_properties(test_read-hmac-sha1-etm@openssh.com PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests;FIXTURE_TEST_MAC=hmac-sha1-etm@openssh.com" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;147;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_read-hmac-sha1-etm@openssh.com "D:/git/github/windows/tools/scanner/src/libssh2/tests/RelWithDebInfo/test_read.exe")
  set_tests_properties(test_read-hmac-sha1-etm@openssh.com PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests;FIXTURE_TEST_MAC=hmac-sha1-etm@openssh.com" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;147;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
else()
  add_test(test_read-hmac-sha1-etm@openssh.com NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_read-hmac-sha2-256 "D:/git/github/windows/tools/scanner/src/libssh2/tests/Debug/test_read.exe")
  set_tests_properties(test_read-hmac-sha2-256 PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests;FIXTURE_TEST_MAC=hmac-sha2-256" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;147;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_read-hmac-sha2-256 "D:/git/github/windows/tools/scanner/src/libssh2/tests/Release/test_read.exe")
  set_tests_properties(test_read-hmac-sha2-256 PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests;FIXTURE_TEST_MAC=hmac-sha2-256" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;147;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_read-hmac-sha2-256 "D:/git/github/windows/tools/scanner/src/libssh2/tests/MinSizeRel/test_read.exe")
  set_tests_properties(test_read-hmac-sha2-256 PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests;FIXTURE_TEST_MAC=hmac-sha2-256" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;147;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_read-hmac-sha2-256 "D:/git/github/windows/tools/scanner/src/libssh2/tests/RelWithDebInfo/test_read.exe")
  set_tests_properties(test_read-hmac-sha2-256 PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests;FIXTURE_TEST_MAC=hmac-sha2-256" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;147;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
else()
  add_test(test_read-hmac-sha2-256 NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_read-hmac-sha2-256-etm@openssh.com "D:/git/github/windows/tools/scanner/src/libssh2/tests/Debug/test_read.exe")
  set_tests_properties(test_read-hmac-sha2-256-etm@openssh.com PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests;FIXTURE_TEST_MAC=hmac-sha2-256-etm@openssh.com" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;147;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_read-hmac-sha2-256-etm@openssh.com "D:/git/github/windows/tools/scanner/src/libssh2/tests/Release/test_read.exe")
  set_tests_properties(test_read-hmac-sha2-256-etm@openssh.com PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests;FIXTURE_TEST_MAC=hmac-sha2-256-etm@openssh.com" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;147;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_read-hmac-sha2-256-etm@openssh.com "D:/git/github/windows/tools/scanner/src/libssh2/tests/MinSizeRel/test_read.exe")
  set_tests_properties(test_read-hmac-sha2-256-etm@openssh.com PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests;FIXTURE_TEST_MAC=hmac-sha2-256-etm@openssh.com" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;147;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_read-hmac-sha2-256-etm@openssh.com "D:/git/github/windows/tools/scanner/src/libssh2/tests/RelWithDebInfo/test_read.exe")
  set_tests_properties(test_read-hmac-sha2-256-etm@openssh.com PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests;FIXTURE_TEST_MAC=hmac-sha2-256-etm@openssh.com" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;147;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
else()
  add_test(test_read-hmac-sha2-256-etm@openssh.com NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_read-hmac-sha2-512 "D:/git/github/windows/tools/scanner/src/libssh2/tests/Debug/test_read.exe")
  set_tests_properties(test_read-hmac-sha2-512 PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests;FIXTURE_TEST_MAC=hmac-sha2-512" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;147;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_read-hmac-sha2-512 "D:/git/github/windows/tools/scanner/src/libssh2/tests/Release/test_read.exe")
  set_tests_properties(test_read-hmac-sha2-512 PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests;FIXTURE_TEST_MAC=hmac-sha2-512" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;147;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_read-hmac-sha2-512 "D:/git/github/windows/tools/scanner/src/libssh2/tests/MinSizeRel/test_read.exe")
  set_tests_properties(test_read-hmac-sha2-512 PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests;FIXTURE_TEST_MAC=hmac-sha2-512" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;147;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_read-hmac-sha2-512 "D:/git/github/windows/tools/scanner/src/libssh2/tests/RelWithDebInfo/test_read.exe")
  set_tests_properties(test_read-hmac-sha2-512 PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests;FIXTURE_TEST_MAC=hmac-sha2-512" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;147;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
else()
  add_test(test_read-hmac-sha2-512 NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_read-hmac-sha2-512-etm@openssh.com "D:/git/github/windows/tools/scanner/src/libssh2/tests/Debug/test_read.exe")
  set_tests_properties(test_read-hmac-sha2-512-etm@openssh.com PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests;FIXTURE_TEST_MAC=hmac-sha2-512-etm@openssh.com" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;147;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_read-hmac-sha2-512-etm@openssh.com "D:/git/github/windows/tools/scanner/src/libssh2/tests/Release/test_read.exe")
  set_tests_properties(test_read-hmac-sha2-512-etm@openssh.com PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests;FIXTURE_TEST_MAC=hmac-sha2-512-etm@openssh.com" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;147;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_read-hmac-sha2-512-etm@openssh.com "D:/git/github/windows/tools/scanner/src/libssh2/tests/MinSizeRel/test_read.exe")
  set_tests_properties(test_read-hmac-sha2-512-etm@openssh.com PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests;FIXTURE_TEST_MAC=hmac-sha2-512-etm@openssh.com" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;147;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_read-hmac-sha2-512-etm@openssh.com "D:/git/github/windows/tools/scanner/src/libssh2/tests/RelWithDebInfo/test_read.exe")
  set_tests_properties(test_read-hmac-sha2-512-etm@openssh.com PROPERTIES  ENVIRONMENT "srcdir=D:/git/github/windows/tools/scanner/src/lib/libssh2/tests;FIXTURE_TEST_MAC=hmac-sha2-512-etm@openssh.com" _BACKTRACE_TRIPLES "D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;147;add_test;D:/git/github/windows/tools/scanner/src/lib/libssh2/tests/CMakeLists.txt;0;")
else()
  add_test(test_read-hmac-sha2-512-etm@openssh.com NOT_AVAILABLE)
endif()
