1.2 – How do I build Lua in Windows and other systems?
This depends on your compiler. Most compilers in these platforms require that you create "project" files. 
You'll need to create projects (or whatever your compiler uses) for building the library, the interpreter, and the compiler. 
The sources are all in the src directory. The exact lists of which modules should go into which project are given in the README. 
See also BuildingLua in the wiki. 
Chapter 1 of the book Beginning Lua Programming contains detailed instructions for downloading, building, and installing Lua.

If you don't have the time or the inclination to compile Lua yourself, get a binary from LuaBinaries. 
Try also LuaDist, a multi-platform distribution of Lua that includes batteries.

https://www.lua.org/faq.html#1.1


--------------------------------------------------------------------------------------------------


Building Lua on other systems
If you're not using the usual Unix tools, then the instructions for building Lua depend on the compiler you use. 
You'll need to create projects (or whatever your compiler uses) for building the library, the interpreter, and the compiler, as follows:

library:
    lapi.c lcode.c lctype.c ldebug.c ldo.c ldump.c lfunc.c lgc.c 
    llex.c lmem.c lobject.c lopcodes.c lparser.c lstate.c lstring.c 
    ltable.c ltm.c lundump.c lvm.c lzio.c lauxlib.c lbaselib.c lcorolib.c 
    ldblib.c liolib.c lmathlib.c loadlib.c loslib.c lstrlib.c ltablib.c lutf8lib.c linit.c
interpreter:
    library, lua.c
compiler:
    library, luac.c
    
To use Lua as a library in your own programs, you'll need to know how to create and use libraries with your compiler. 
Moreover, to dynamically load C libraries for Lua, 
you'll need to know how to create dynamic libraries and you'll need to make sure that the Lua API functions are accessible to those dynamic libraries — but don't link the Lua library into each dynamic library. 
For Unix, we recommend that the Lua library be linked statically into the host program and its symbols exported for dynamic linking; 
src/Makefile does this for the Lua interpreter. 
For Windows, we recommend that the Lua library be a DLL. 
In all cases, the compiler luac should be linked statically.

As mentioned above, you may edit src/luaconf.h to customize some features before building Lua.

https://www.lua.org/manual/5.4/readme.html#other


--------------------------------------------------------------------------------------------------
